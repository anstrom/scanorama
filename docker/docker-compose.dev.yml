---
services:
  postgres:
    image: postgres:17
    container_name: scanorama-dev-postgres
    environment:
      POSTGRES_DB: scanorama_dev
      POSTGRES_USER: scanorama_dev
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scanorama_dev -d scanorama_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - scanorama-dev

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: scanorama-dev-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@scanorama.local
      PGADMIN_DEFAULT_PASSWORD: dev_password
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - scanorama-dev
    profiles:
      - tools

  redis:
    image: redis:8-alpine
    container_name: scanorama-dev-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - scanorama-dev
    profiles:
      - cache

  # Test target services for development scanning
  nginx-test:
    image: nginx:alpine
    container_name: scanorama-dev-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./test-targets/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - scanorama-dev
    profiles:
      - targets

  ssh-test:
    image: linuxserver/openssh-server:latest
    container_name: scanorama-dev-ssh
    environment:
      PUID: 1000
      PGID: 1000
      TZ: UTC
      PUBLIC_KEY_FILE: /config/authorized_keys
      SUDO_ACCESS: false
      PASSWORD_ACCESS: true
      USER_PASSWORD: test_password
      USER_NAME: testuser
    ports:
      - "2222:2222"
    volumes:
      - ssh_dev_data:/config
    restart: unless-stopped
    networks:
      - scanorama-dev
    profiles:
      - targets

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  ssh_dev_data:
    driver: local

networks:
  scanorama-dev:
    driver: bridge
    name: scanorama-dev-network
