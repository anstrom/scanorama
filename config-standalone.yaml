# Scanorama Standalone Configuration
# Minimal configuration for testing without external dependencies

# Server Configuration
server:
  host: "0.0.0.0"
  port: 8080
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "60s"

  cors:
    enabled: true
    allowed_origins: ["*"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Content-Type", "Authorization", "X-Requested-With"]

  rate_limit:
    enabled: false

# Database Configuration (PostgreSQL for standalone)
# Uses test database credentials from docker-compose.test.yml
database:
  host: "localhost"
  port: 5432
  database: "scanorama_test"
  username: "test_user"
  password: "test_password"
  ssl_mode: "disable"
  max_open_conns: 5
  max_idle_conns: 1
  conn_max_lifetime: "30m"
  conn_max_idle_time: "15m"

# Scanning Configuration
scanning:
  default_timeout: "2m"
  default_ports: "80,443,22,21,25,53,110,143,993,995"
  max_concurrent_scans: 3

  discovery:
    ping_timeout: "2s"
    max_hosts_per_scan: 100

  port_scan:
    timeout: "1s"
    max_concurrent_ports: 50
    scan_delay: "10ms"

  service_detection:
    enabled: true
    timeout: "5s"
    max_probes: 3

# Network Configuration
network:
  default_networks:
    - "192.168.1.0/24"
    - "127.0.0.1/32"

  excluded_networks:
    - "169.254.0.0/16"
    - "224.0.0.0/4"

  interface: "auto"

# Logging Configuration
logging:
  level: "info"
  format: "text"
  output: "stdout"

  components:
    database: "warn"
    scanner: "info"
    api: "info"
    discovery: "info"

# Security Configuration
security:
  api:
    enabled: false

  admin:
    enabled: true
    require_auth: false

  scanning:
    require_authorization: false
    max_scan_size: "1000"
    scan_approval_required: false

# Performance Configuration
performance:
  worker_pool:
    size: 5
    queue_size: 100
    retry_attempts: 2
    retry_delay: "15s"

  memory:
    max_scan_results: 10000
    result_cache_ttl: "30m"

  timeouts:
    scan_job: "10m"
    database_query: "10s"
    external_api: "5s"

# Monitoring Configuration
monitoring:
  metrics:
    enabled: true
    endpoint: "/metrics"
    interval: "60s"

  health:
    enabled: true
    endpoint: "/health"

  alerts:
    enabled: false

# Storage Configuration
storage:
  retention:
    scan_results: "7d"
    host_data: "30d"
    logs: "3d"

  cleanup:
    enabled: true
    interval: "6h"
    batch_size: 500

# Feature Flags
features:
  experimental:
    advanced_scanning: false
    ai_analysis: false

  beta:
    web_ui: true
    api_v2: false

  legacy:
    api_v1_compat: true

# Development Settings
development:
  debug: true
  hot_reload: false

  testing:
    mock_scans: true
    test_data_enabled: true

  profiling:
    enabled: false
