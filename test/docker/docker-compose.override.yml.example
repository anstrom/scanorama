# Example override file for the test Docker Compose environment
# Copy this file to docker-compose.override.yml and modify as needed
version: "3.8"

services:
  # Override PostgreSQL settings
  scanorama-postgres:
    # Enable persistence by using a named volume
    volumes:
      - ../fixtures:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data/pgdata
    # Example of customizing environment variables
    environment:
      POSTGRES_DB: scanorama_test_custom
      POSTGRES_USER: custom_user
      POSTGRES_PASSWORD: custom_password
    # Example of adding extra startup options
    command:
      [
        "postgres",
        "-c",
        "fsync=off",
        "-c",
        "synchronous_commit=off",
        "-c",
        "full_page_writes=off",
        "-c",
        "log_statement=all",
      ]

  # Example of adding a custom service for testing
  scanorama-custom-service:
    image: alpine:latest
    command: ["sh", "-c", "while true; do echo 'Custom service running'; sleep 60; done"]
    ports:
      - "8999:8999"

  # Example of customizing the Flask app
  scanorama-flask:
    # Override environment variables
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - CUSTOM_VARIABLE=test_value
    # Mount additional volumes
    volumes:
      - ./flask:/app
      - ./custom_data:/app/data

volumes:
  postgres_data:
    # This will create a named volume for PostgreSQL data
    # Data will persist between container restarts
