version: "3.8"

services:
  # PostgreSQL service for local testing
  scanorama-postgres:
    image: postgres:16-alpine
    container_name: scanorama-test-postgres
    environment:
      POSTGRES_DB: scanorama_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ${PWD:-.}/test/fixtures/00-create-user.sql:/docker-entrypoint-initdb.d/00-create-user.sql:ro
      - ${PWD:-.}/internal/db/001_initial_schema.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    network_mode: bridge
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d postgres && pg_isready -U test_user -d scanorama_test || pg_isready -U postgres -d postgres",
        ]
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    command:
      [
        "postgres",
        "-c",
        "fsync=off",
        "-c",
        "synchronous_commit=off",
        "-c",
        "full_page_writes=off",
      ]

  scanorama-nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:80",
        ]
      interval: 2s
      timeout: 5s
      retries: 5

  scanorama-ssh:
    image: lscr.io/linuxserver/openssh-server:latest
    environment:
      - PUID=1000
      - PGID=1000
      - PASSWORD_ACCESS=true
      - USER_PASSWORD=testpass
      - USER_NAME=testuser
    ports:
      - "8022:2222"
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "sshd"]
      interval: 2s
      timeout: 5s
      retries: 5

  scanorama-redis:
    image: redis:alpine
    ports:
      - "8379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 5

networks:
  default:
    name: scanorama_test
    driver: bridge
