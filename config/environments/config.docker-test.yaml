# Scanorama Docker Test Configuration
# For testing with Docker PostgreSQL instance

# Database Configuration - Docker Test Environment
database:
  host: "localhost"
  port: 5433
  database: "scanorama_test"
  username: "postgres"
  password: "testpass"
  ssl_mode: "disable"

  # Small connection pool for testing
  max_open_conns: 5
  max_idle_conns: 2
  conn_max_lifetime: "5m"
  conn_max_idle_time: "5m"

# Scanning Configuration - Test defaults
scanning:
  worker_pool_size: 2
  default_interval: "5m"
  max_scan_timeout: "30s"
  default_ports: "22,80,443"
  default_scan_type: "connect"
  max_concurrent_targets: 3
  enable_service_detection: false
  enable_os_detection: false

  retry:
    max_retries: 1
    retry_delay: "2s"
    backoff_multiplier: 1.5

  rate_limit:
    enabled: false

# API Server Configuration - Test settings
api:
  enabled: true
  listen_addr: "127.0.0.1"
  port: 8081

  tls:
    enabled: false

  # No auth required for testing
  api_key: ""

  cors:
    enabled: true
    allowed_origins: ["*"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["*"]

  request_timeout: "10s"
  max_request_size: 1048576

# Logging Configuration - Test settings
logging:
  level: "debug"
  format: "text"
  output: "stdout"
  structured: false
  request_logging: true

# Monitoring Configuration
monitoring:
  enabled: true
  endpoint: "/metrics"
  port: 0
