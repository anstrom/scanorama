basePath: /api/v1
definitions:
  docs.AdminStatusResponse:
    properties:
      admin_status:
        example: active
        type: string
      server_info:
        additionalProperties: true
        type: object
      timestamp:
        type: string
    type: object
  docs.CreateDiscoveryJobRequest:
    properties:
      method:
        enum:
        - tcp
        - icmp
        - arp
        example: tcp
        type: string
      name:
        example: Office Network Discovery
        type: string
      network:
        example: 192.168.1.0/24
        type: string
    type: object
  docs.CreateProfileRequest:
    properties:
      description:
        example: Custom scan configuration
        type: string
      name:
        example: Custom Scan Profile
        type: string
      options:
        additionalProperties: true
        type: object
      ports:
        example: 22,80,443,8080
        type: string
      scan_type:
        example: connect
        type: string
    type: object
  docs.CreateScanRequest:
    properties:
      description:
        example: Regular security assessment
        type: string
      name:
        example: Weekly security scan
        type: string
      profile_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      scan_options:
        additionalProperties: true
        type: object
      targets:
        example:
        - 192.168.1.0/24
        items:
          type: string
        type: array
    type: object
  docs.CreateScheduleRequest:
    properties:
      cron_expression:
        example: 0 2 * * *
        type: string
      enabled:
        example: true
        type: boolean
      name:
        example: Daily Security Scan
        type: string
      profile_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      targets:
        example:
        - 192.168.1.0/24
        items:
          type: string
        type: array
    type: object
  docs.DiscoveryJobResponse:
    properties:
      created_at:
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440004
        type: string
      method:
        enum:
        - tcp
        - icmp
        - arp
        example: tcp
        type: string
      name:
        example: Network Discovery
        type: string
      network:
        example: 192.168.1.0/24
        type: string
      progress:
        example: 45.5
        type: number
      started_at:
        type: string
      status:
        enum:
        - pending
        - running
        - completed
        - failed
        example: running
        type: string
    type: object
  docs.ErrorResponse:
    properties:
      error:
        example: Invalid request
        type: string
      request_id:
        example: req-123
        type: string
      timestamp:
        type: string
    type: object
  docs.HealthResponse:
    properties:
      checks:
        additionalProperties:
          type: string
        type: object
      status:
        example: healthy
        type: string
      timestamp:
        type: string
      uptime:
        example: 2h30m45s
        type: string
    type: object
  docs.HostResponse:
    properties:
      first_seen:
        type: string
      hostname:
        example: server01.local
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
      ip_address:
        example: 192.168.1.100
        type: string
      last_seen:
        type: string
      mac_address:
        example: 00:1B:44:11:3A:B7
        type: string
      open_ports:
        example:
        - 22
        - 80
        - 443
        items:
          type: integer
        type: array
      scan_count:
        example: 5
        type: integer
      status:
        enum:
        - up
        - down
        - unknown
        example: up
        type: string
    type: object
  docs.PaginatedDiscoveryJobsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/docs.DiscoveryJobResponse'
        type: array
      pagination:
        $ref: '#/definitions/docs.PaginationInfo'
    type: object
  docs.PaginatedHostsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/docs.HostResponse'
        type: array
      pagination:
        $ref: '#/definitions/docs.PaginationInfo'
    type: object
  docs.PaginatedProfilesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/docs.ProfileResponse'
        type: array
      pagination:
        $ref: '#/definitions/docs.PaginationInfo'
    type: object
  docs.PaginatedScansResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/docs.ScanResponse'
        type: array
      pagination:
        $ref: '#/definitions/docs.PaginationInfo'
    type: object
  docs.PaginatedSchedulesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/docs.ScheduleResponse'
        type: array
      pagination:
        $ref: '#/definitions/docs.PaginationInfo'
    type: object
  docs.PaginationInfo:
    properties:
      page:
        example: 1
        type: integer
      page_size:
        example: 20
        type: integer
      total_items:
        example: 150
        type: integer
      total_pages:
        example: 8
        type: integer
    type: object
  docs.ProfileResponse:
    properties:
      created_at:
        type: string
      description:
        example: Fast TCP connect scan
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440003
        type: string
      name:
        example: Quick Connect Scan
        type: string
      options:
        additionalProperties: true
        type: object
      ports:
        example: 22,80,443
        type: string
      scan_type:
        example: connect
        type: string
      updated_at:
        type: string
    type: object
  docs.ScanResponse:
    properties:
      completed_at:
        type: string
      created_at:
        type: string
      duration:
        example: 14m30s
        type: string
      error_message:
        type: string
      hosts_discovered:
        example: 25
        type: integer
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      ports_scanned:
        example: 2500
        type: integer
      profile_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      progress:
        example: 65.5
        type: number
      started_at:
        type: string
      status:
        enum:
        - pending
        - running
        - completed
        - failed
        - cancelled
        example: running
        type: string
      targets:
        example:
        - 192.168.1.0/24
        items:
          type: string
        type: array
    type: object
  docs.ScheduleResponse:
    properties:
      created_at:
        type: string
      cron_expression:
        example: 0 2 * * 1
        type: string
      enabled:
        example: true
        type: boolean
      id:
        example: 550e8400-e29b-41d4-a716-446655440005
        type: string
      last_run:
        type: string
      name:
        example: Weekly Security Scan
        type: string
      next_run:
        type: string
      profile_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      targets:
        example:
        - 192.168.1.0/24
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  docs.StatusResponse:
    properties:
      service:
        example: scanorama-api
        type: string
      timestamp:
        type: string
      uptime:
        example: 2h30m45s
        type: string
      version:
        example: 0.7.0
        type: string
    type: object
  docs.VersionResponse:
    properties:
      service:
        example: scanorama
        type: string
      timestamp:
        type: string
      version:
        example: 0.7.0
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Scanorama Support
    url: https://github.com/anstrom/scanorama
  description: |-
    Enterprise-grade network scanning and discovery service with automated reconnaissance capabilities

    ## Features
    - **Advanced Scanning Engine**: Multiple scan types (connect, SYN, version, comprehensive, aggressive, stealth)
    - **Enterprise Reliability**: Race condition-free worker pools with graceful shutdown
    - **Database Integration**: PostgreSQL persistence with automatic migrations and transaction support
    - **Real-time Updates**: WebSocket support for live scan progress and results
    - **Comprehensive API**: RESTful endpoints with full CRUD operations
    - **Monitoring & Observability**: Built-in metrics, structured logging, and health checks
    - **Security**: Vulnerability scanning integration and secure error handling
    - **Scheduling**: Automated scan jobs with cron-like scheduling
    - **High Performance**: Concurrent processing with configurable rate limiting

    ## Quality Assurance
    - **Test Coverage**: >90% coverage on core packages with comprehensive integration tests
    - **Security**: Zero known vulnerabilities with automated security scanning
    - **Code Quality**: Zero linting issues with automated quality checks

    ## Authentication
    Most endpoints require API key authentication. Include your API key in the `X-API-Key` header.
    Public endpoints (health, status, version, metrics) do not require authentication.
  license:
    name: MIT
    url: https://github.com/anstrom/scanorama/blob/main/LICENSE
  title: Scanorama API
  version: 0.7.0
paths:
  /admin/status:
    get:
      description: Returns administrative status information
      operationId: getAdminStatus
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.AdminStatusResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Admin status
      tags:
      - Admin
  /discovery:
    get:
      description: Get paginated list of discovery jobs
      operationId: listDiscoveryJobs
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: page_size
        type: integer
      - description: Filter by status
        enum:
        - pending
        - running
        - completed
        - failed
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.PaginatedDiscoveryJobsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List discovery jobs
      tags:
      - Discovery
    post:
      consumes:
      - application/json
      description: Create a new network discovery job
      operationId: createDiscoveryJob
      parameters:
      - description: Discovery job configuration
        in: body
        name: discovery
        required: true
        schema:
          $ref: '#/definitions/docs.CreateDiscoveryJobRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/docs.DiscoveryJobResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create discovery job
      tags:
      - Discovery
  /discovery/{discoveryId}:
    get:
      description: Get discovery job details by ID
      operationId: getDiscoveryJob
      parameters:
      - description: Discovery Job ID
        format: uuid
        in: path
        name: discoveryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.DiscoveryJobResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get discovery job
      tags:
      - Discovery
  /discovery/{discoveryId}/start:
    post:
      description: Start a discovery job
      operationId: startDiscovery
      parameters:
      - description: Discovery Job ID
        format: uuid
        in: path
        name: discoveryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.DiscoveryJobResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Start discovery
      tags:
      - Discovery
  /discovery/{discoveryId}/stop:
    post:
      description: Stop a running discovery job
      operationId: stopDiscovery
      parameters:
      - description: Discovery Job ID
        format: uuid
        in: path
        name: discoveryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.DiscoveryJobResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Stop discovery
      tags:
      - Discovery
  /health:
    get:
      description: Returns service health status including database connectivity
      operationId: getHealth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.HealthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/docs.HealthResponse'
      summary: Health check
      tags:
      - System
  /hosts:
    get:
      description: Get paginated list of discovered hosts with optional filtering
      operationId: listHosts
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: page_size
        type: integer
      - description: Filter by IP address
        in: query
        name: ip_address
        type: string
      - description: Filter by hostname
        in: query
        name: hostname
        type: string
      - description: Filter by status
        enum:
        - up
        - down
        - unknown
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.PaginatedHostsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List hosts
      tags:
      - Hosts
    post:
      consumes:
      - application/json
      description: Manually add a host to the inventory
      operationId: createHost
      parameters:
      - description: Host information
        in: body
        name: host
        required: true
        schema:
          $ref: '#/definitions/docs.HostResponse'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/docs.HostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create host
      tags:
      - Hosts
  /hosts/{hostId}:
    delete:
      description: Remove host from inventory
      operationId: deleteHost
      parameters:
      - description: Host ID
        format: uuid
        in: path
        name: hostId
        required: true
        type: string
      responses:
        "204":
          description: Successfully deleted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete host
      tags:
      - Hosts
    get:
      description: Get host details by ID
      operationId: getHost
      parameters:
      - description: Host ID
        format: uuid
        in: path
        name: hostId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.HostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get host
      tags:
      - Hosts
    put:
      consumes:
      - application/json
      description: Update host information
      operationId: updateHost
      parameters:
      - description: Host ID
        format: uuid
        in: path
        name: hostId
        required: true
        type: string
      - description: Updated host information
        in: body
        name: host
        required: true
        schema:
          $ref: '#/definitions/docs.HostResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.HostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update host
      tags:
      - Hosts
  /hosts/{hostId}/scans:
    get:
      description: Get scans associated with a specific host
      operationId: getHostScans
      parameters:
      - description: Host ID
        format: uuid
        in: path
        name: hostId
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.PaginatedScansResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get host scans
      tags:
      - Hosts
  /metrics:
    get:
      description: Returns Prometheus metrics for monitoring
      operationId: getMetrics
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      summary: Application metrics
      tags:
      - System
  /profiles:
    get:
      description: Get paginated list of scan profiles
      operationId: listProfiles
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: page_size
        type: integer
      - description: Filter by scan type
        in: query
        name: scan_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.PaginatedProfilesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List profiles
      tags:
      - Profiles
    post:
      consumes:
      - application/json
      description: Create a new scan profile
      operationId: createProfile
      parameters:
      - description: Profile configuration
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/docs.CreateProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/docs.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create profile
      tags:
      - Profiles
  /profiles/{profileId}:
    delete:
      description: Delete scan profile
      operationId: deleteProfile
      parameters:
      - description: Profile ID
        format: uuid
        in: path
        name: profileId
        required: true
        type: string
      responses:
        "204":
          description: Successfully deleted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete profile
      tags:
      - Profiles
    get:
      description: Get scan profile details by ID
      operationId: getProfile
      parameters:
      - description: Profile ID
        format: uuid
        in: path
        name: profileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get profile
      tags:
      - Profiles
    put:
      consumes:
      - application/json
      description: Update scan profile configuration
      operationId: updateProfile
      parameters:
      - description: Profile ID
        format: uuid
        in: path
        name: profileId
        required: true
        type: string
      - description: Updated profile configuration
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/docs.CreateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update profile
      tags:
      - Profiles
  /scans:
    get:
      description: Get paginated list of scans with optional filtering
      operationId: listScans
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: page_size
        type: integer
      - description: Filter by status
        enum:
        - pending
        - running
        - completed
        - failed
        - cancelled
        in: query
        name: status
        type: string
      - description: Filter by target
        in: query
        name: target
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.PaginatedScansResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List scans
      tags:
      - Scans
    post:
      consumes:
      - application/json
      description: Create a new network scan job
      operationId: createScan
      parameters:
      - description: Scan configuration
        in: body
        name: scan
        required: true
        schema:
          $ref: '#/definitions/docs.CreateScanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/docs.ScanResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create scan
      tags:
      - Scans
  /scans/{scanId}:
    delete:
      description: Cancel running scan or delete completed scan
      operationId: deleteScan
      parameters:
      - description: Scan ID
        format: uuid
        in: path
        name: scanId
        required: true
        type: string
      responses:
        "204":
          description: Successfully deleted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete scan
      tags:
      - Scans
    get:
      description: Get scan details by ID
      operationId: getScan
      parameters:
      - description: Scan ID
        format: uuid
        in: path
        name: scanId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ScanResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get scan
      tags:
      - Scans
  /scans/{scanId}/results:
    get:
      description: Get detailed results from a completed scan
      operationId: getScanResults
      parameters:
      - description: Scan ID
        format: uuid
        in: path
        name: scanId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get scan results
      tags:
      - Scans
  /scans/{scanId}/start:
    post:
      description: Start a pending scan
      operationId: startScan
      parameters:
      - description: Scan ID
        format: uuid
        in: path
        name: scanId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ScanResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Start scan
      tags:
      - Scans
  /scans/{scanId}/stop:
    post:
      description: Stop a running scan
      operationId: stopScan
      parameters:
      - description: Scan ID
        format: uuid
        in: path
        name: scanId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ScanResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Stop scan
      tags:
      - Scans
  /schedules:
    get:
      description: Get paginated list of scheduled scans
      operationId: listSchedules
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        name: page_size
        type: integer
      - description: Filter by enabled status
        in: query
        name: enabled
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.PaginatedSchedulesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List schedules
      tags:
      - Schedules
    post:
      consumes:
      - application/json
      description: Create a new scheduled scan
      operationId: createSchedule
      parameters:
      - description: Schedule configuration
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/docs.CreateScheduleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/docs.ScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create schedule
      tags:
      - Schedules
  /schedules/{scheduleId}:
    delete:
      description: Delete scheduled scan
      operationId: deleteSchedule
      parameters:
      - description: Schedule ID
        format: uuid
        in: path
        name: scheduleId
        required: true
        type: string
      responses:
        "204":
          description: Successfully deleted
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete schedule
      tags:
      - Schedules
    get:
      description: Get schedule details by ID
      operationId: getSchedule
      parameters:
      - description: Schedule ID
        format: uuid
        in: path
        name: scheduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get schedule
      tags:
      - Schedules
    put:
      consumes:
      - application/json
      description: Update schedule configuration
      operationId: updateSchedule
      parameters:
      - description: Schedule ID
        format: uuid
        in: path
        name: scheduleId
        required: true
        type: string
      - description: Updated schedule configuration
        in: body
        name: schedule
        required: true
        schema:
          $ref: '#/definitions/docs.CreateScheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update schedule
      tags:
      - Schedules
  /schedules/{scheduleId}/disable:
    post:
      description: Disable a scheduled scan
      operationId: disableSchedule
      parameters:
      - description: Schedule ID
        format: uuid
        in: path
        name: scheduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Disable schedule
      tags:
      - Schedules
  /schedules/{scheduleId}/enable:
    post:
      description: Enable a scheduled scan
      operationId: enableSchedule
      parameters:
      - description: Schedule ID
        format: uuid
        in: path
        name: scheduleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.ScheduleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Enable schedule
      tags:
      - Schedules
  /status:
    get:
      description: Returns detailed system status information
      operationId: getStatus
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      summary: System status
      tags:
      - System
  /version:
    get:
      description: Returns version and build information
      operationId: getVersion
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.VersionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      summary: Version information
      tags:
      - System
security:
- ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    description: API key for authentication
    in: header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
